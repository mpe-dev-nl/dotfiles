{
  "version": 3,
  "sources": ["../node_modules/stream-json/Assembler.js", "../node_modules/stream-json/streamers/StreamBase.js", "../node_modules/stream-chain/index.js", "../node_modules/stream-json/utils/Utf8Stream.js", "../node_modules/stream-json/Parser.js", "../node_modules/stream-json/utils/withParser.js", "../node_modules/stream-json/streamers/StreamArray.js", "../src/toggleAllLights.ts", "../src/helpers/constants.ts", "../src/lib/createHueClient.ts", "../src/lib/HueClient.ts", "../src/lib/RateLimitedQueue.ts", "../src/helpers/arrayExtensions.ts"],
  "sourcesContent": ["'use strict';\n\nconst EventEmitter = require('events');\n\nconst startObject = Ctr =>\n  function () {\n    if (this.done) {\n      this.done = false;\n    } else {\n      this.stack.push(this.current, this.key);\n    }\n    this.current = new Ctr();\n    this.key = null;\n  };\n\nclass Assembler extends EventEmitter {\n  static connectTo(stream, options) {\n    return new Assembler(options).connectTo(stream);\n  }\n\n  constructor(options) {\n    super();\n    this.stack = [];\n    this.current = this.key = null;\n    this.done = true;\n    if (options) {\n      this.reviver = typeof options.reviver == 'function' && options.reviver;\n      if (this.reviver) {\n        this.stringValue = this._saveValue = this._saveValueWithReviver;\n      }\n      if (options.numberAsString) {\n        this.numberValue = this.stringValue;\n      }\n    }\n  }\n\n  connectTo(stream) {\n    stream.on('data', chunk => {\n      if (this[chunk.name]) {\n        this[chunk.name](chunk.value);\n        if (this.done) this.emit('done', this);\n      }\n    });\n    return this;\n  }\n\n  get depth() {\n    return (this.stack.length >> 1) + (this.done ? 0 : 1);\n  }\n\n  get path() {\n    const path = [];\n    for (let i = 0; i < this.stack.length; i += 2) {\n      const key = this.stack[i + 1];\n      path.push(key === null ? this.stack[i].length : key);\n    }\n    return path;\n  }\n\n  dropToLevel(level) {\n    if (level < this.depth) {\n      if (level) {\n        const index = (level - 1) << 1;\n        this.current = this.stack[index];\n        this.key = this.stack[index + 1];\n        this.stack.splice(index);\n      } else {\n        this.stack = [];\n        this.current = this.key = null;\n        this.done = true;\n      }\n    }\n    return this;\n  }\n\n  consume(chunk) {\n    this[chunk.name] && this[chunk.name](chunk.value);\n    return this;\n  }\n\n  keyValue(value) {\n    this.key = value;\n  }\n\n  //stringValue() - aliased below to _saveValue()\n\n  numberValue(value) {\n    this._saveValue(parseFloat(value));\n  }\n  nullValue() {\n    this._saveValue(null);\n  }\n  trueValue() {\n    this._saveValue(true);\n  }\n  falseValue() {\n    this._saveValue(false);\n  }\n\n  //startObject() - assigned below\n\n  endObject() {\n    if (this.stack.length) {\n      const value = this.current;\n      this.key = this.stack.pop();\n      this.current = this.stack.pop();\n      this._saveValue(value);\n    } else {\n      this.done = true;\n    }\n  }\n\n  //startArray() - assigned below\n  //endArray() - aliased below to endObject()\n\n  _saveValue(value) {\n    if (this.done) {\n      this.current = value;\n    } else {\n      if (this.current instanceof Array) {\n        this.current.push(value);\n      } else {\n        this.current[this.key] = value;\n        this.key = null;\n      }\n    }\n  }\n  _saveValueWithReviver(value) {\n    if (this.done) {\n      this.current = this.reviver('', value);\n    } else {\n      if (this.current instanceof Array) {\n        value = this.reviver('' + this.current.length, value);\n        this.current.push(value);\n        if (value === undefined) {\n          delete this.current[this.current.length - 1];\n        }\n      } else {\n        value = this.reviver(this.key, value);\n        if (value !== undefined) {\n          this.current[this.key] = value;\n        }\n        this.key = null;\n      }\n    }\n  }\n}\n\nAssembler.prototype.stringValue = Assembler.prototype._saveValue;\nAssembler.prototype.startObject = startObject(Object);\nAssembler.prototype.startArray = startObject(Array);\nAssembler.prototype.endArray = Assembler.prototype.endObject;\n\nmodule.exports = Assembler;\n", "'use strict';\n\nconst {Transform} = require('stream');\nconst Assembler = require('../Assembler');\n\nclass Counter {\n  constructor(initialDepth) {\n    this.depth = initialDepth;\n  }\n  startObject() {\n    ++this.depth;\n  }\n  endObject() {\n    --this.depth;\n  }\n  startArray() {\n    ++this.depth;\n  }\n  endArray() {\n    --this.depth;\n  }\n}\n\nclass StreamBase extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: true, readableObjectMode: true}));\n    if (options) {\n      this.objectFilter = options.objectFilter;\n      this.includeUndecided = options.includeUndecided;\n    }\n    if (typeof this.objectFilter != 'function') {\n      this._filter = this._transform;\n    }\n    this._transform = this._wait || this._filter;\n    this._assembler = new Assembler(options);\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n      }\n    }\n    callback(null);\n  }\n\n  _filter(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      const result = this.objectFilter(this._assembler);\n      if (result) {\n        if (this._assembler.depth === this._level) {\n          this._push();\n          this._transform = this._filter;\n        }\n        this._transform = this._accept;\n        return callback(null);\n      }\n      if (result === false) {\n        this._saved_assembler = this._assembler;\n        this._assembler = new Counter(this._saved_assembler.depth);\n        this._saved_assembler.dropToLevel(this._level);\n        if (this._assembler.depth === this._level) {\n          this._assembler = this._saved_assembler;\n          this._transform = this._filter;\n        }\n        this._transform = this._reject;\n        return callback(null);\n      }\n      if (this._assembler.depth === this._level) {\n        this._push(!this.includeUndecided);\n      }\n    }\n    callback(null);\n  }\n\n  _accept(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._push();\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n\n  _reject(chunk, encoding, callback) {\n    if (this._assembler[chunk.name]) {\n      this._assembler[chunk.name](chunk.value);\n      if (this._assembler.depth === this._level) {\n        this._assembler = this._saved_assembler;\n        this._transform = this._filter;\n      }\n    }\n    callback(null);\n  }\n}\n\nmodule.exports = StreamBase;\n", "'use strict';\n\nconst {Readable, Writable, Duplex, Transform} = require('stream');\n\nconst none = Symbol.for('object-stream.none');\nconst finalSymbol = Symbol.for('object-stream.final');\nconst manySymbol = Symbol.for('object-stream.many');\n\nconst final = value => ({[finalSymbol]: value});\nconst many = values => ({[manySymbol]: values});\n\nconst isFinal = o => o && typeof o == 'object' && finalSymbol in o;\nconst isMany = o => o && typeof o == 'object' && manySymbol in o;\n\nconst getFinalValue = o => o[finalSymbol];\nconst getManyValues = o => o[manySymbol];\n\nconst runAsyncGenerator = async (gen, stream) => {\n  for (;;) {\n    let data = gen.next();\n    if (data && typeof data.then == 'function') {\n      data = await data;\n    }\n    if (data.done) break;\n    let value = data.value;\n    if (value && typeof value.then == 'function') {\n      value = await value;\n    }\n    Chain.sanitize(value, stream);\n  }\n};\n\nconst wrapFunction = fn =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        const result = fn.call(this, chunk, encoding);\n        if (result && typeof result.then == 'function') {\n          // thenable\n          result.then(\n            result => (Chain.sanitize(result, this), callback(null)),\n            error => callback(error)\n          );\n          return;\n        }\n        if (result && typeof result.next == 'function') {\n          // generator\n          runAsyncGenerator(result, this).then(\n            () => callback(null),\n            error => callback(error)\n          );\n          return;\n        }\n        Chain.sanitize(result, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\nconst wrapArray = fns =>\n  new Transform({\n    writableObjectMode: true,\n    readableObjectMode: true,\n    transform(chunk, encoding, callback) {\n      try {\n        let value = chunk;\n        for (let i = 0; i < fns.length; ++i) {\n          const result = fns[i].call(this, value, encoding);\n          if (result === Chain.none) {\n            callback(null);\n            return;\n          }\n          if (Chain.isFinal(result)) {\n            value = Chain.getFinalValue(result);\n            break;\n          }\n          value = result;\n        }\n        Chain.sanitize(value, this);\n        callback(null);\n      } catch (error) {\n        callback(error);\n      }\n    }\n  });\n\n// is*NodeStream functions taken from https://github.com/nodejs/node/blob/master/lib/internal/streams/utils.js\nconst isReadableNodeStream = obj =>\n  obj &&\n  typeof obj.pipe === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._writableState || (typeof obj._readableState === 'object' ? obj._readableState.readable : null) !== false) && // Duplex\n  (!obj._writableState || obj._readableState); // Writable has .pipe.\n\nconst isWritableNodeStream = obj =>\n  obj &&\n  typeof obj.write === 'function' &&\n  typeof obj.on === 'function' &&\n  (!obj._readableState || (typeof obj._writableState === 'object' ? obj._writableState.writable : null) !== false); // Duplex\n\nconst isDuplexNodeStream = obj =>\n  obj && typeof obj.pipe === 'function' && obj._readableState && typeof obj.on === 'function' && typeof obj.write === 'function';\n\nclass Chain extends Duplex {\n  constructor(fns, options) {\n    super(options || {writableObjectMode: true, readableObjectMode: true});\n\n    if (!(fns instanceof Array) || !fns.length) {\n      throw Error(\"Chain's argument should be a non-empty array.\");\n    }\n\n    this.streams = fns\n      .filter(fn => fn)\n      .map((fn, index, fns) => {\n        if (typeof fn === 'function' || fn instanceof Array) return Chain.convertToTransform(fn);\n        if (isDuplexNodeStream(fn) || (!index && isReadableNodeStream(fn)) || (index === fns.length - 1 && isWritableNodeStream(fn))) {\n          return fn;\n        }\n        throw Error('Arguments should be functions, arrays or streams.');\n      })\n      .filter(s => s);\n    this.input = this.streams[0];\n    this.output = this.streams.reduce((output, stream) => (output && output.pipe(stream)) || stream);\n\n    if (!isWritableNodeStream(this.input)) {\n      this._write = (_1, _2, callback) => callback(null);\n      this._final = callback => callback(null); // unavailable in Node 6\n      this.input.on('end', () => this.end());\n    }\n\n    if (isReadableNodeStream(this.output)) {\n      this.output.on('data', chunk => !this.push(chunk) && this.output.pause());\n      this.output.on('end', () => this.push(null));\n    } else {\n      this._read = () => {}; // nop\n      this.resume();\n      this.output.on('finish', () => this.push(null));\n    }\n\n    // connect events\n    if (!options || !options.skipEvents) {\n      this.streams.forEach(stream => stream.on('error', error => this.emit('error', error)));\n    }\n  }\n  _write(chunk, encoding, callback) {\n    let error = null;\n    try {\n      this.input.write(chunk, encoding, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _final(callback) {\n    let error = null;\n    try {\n      this.input.end(null, null, e => callback(e || error));\n    } catch (e) {\n      error = e;\n    }\n  }\n  _read() {\n    this.output.resume();\n  }\n  static make(fns, options) {\n    return new Chain(fns, options);\n  }\n  static sanitize(result, stream) {\n    if (Chain.isFinal(result)) {\n      result = Chain.getFinalValue(result);\n    } else if (Chain.isMany(result)) {\n      result = Chain.getManyValues(result);\n    }\n    if (result !== undefined && result !== null && result !== Chain.none) {\n      if (result instanceof Array) {\n        result.forEach(value => value !== undefined && value !== null && stream.push(value));\n      } else {\n        stream.push(result);\n      }\n    }\n  }\n  static convertToTransform(fn) {\n    if (typeof fn === 'function') return wrapFunction(fn);\n    if (fn instanceof Array) return fn.length ? wrapArray(fn) : null;\n    return null;\n  }\n}\n\nChain.none = none;\nChain.final = final;\nChain.isFinal = isFinal;\nChain.getFinalValue = getFinalValue;\nChain.many = many;\nChain.isMany = isMany;\nChain.getManyValues = getManyValues;\n\nChain.chain = Chain.make;\nChain.make.Constructor = Chain;\n\nmodule.exports = Chain;\n", "'use strict';\n\nconst {Transform} = require('stream');\nconst {StringDecoder} = require('string_decoder');\n\nclass Utf8Stream extends Transform {\n  constructor(options) {\n    super(Object.assign({}, options, {writableObjectMode: false}));\n    this._buffer = '';\n  }\n\n  _transform(chunk, encoding, callback) {\n    if (typeof chunk == 'string') {\n      this._transform = this._transformString;\n    } else {\n      this._stringDecoder = new StringDecoder();\n      this._transform = this._transformBuffer;\n    }\n    this._transform(chunk, encoding, callback);\n  }\n\n  _transformBuffer(chunk, _, callback) {\n    this._buffer += this._stringDecoder.write(chunk);\n    this._processBuffer(callback);\n  }\n\n  _transformString(chunk, _, callback) {\n    this._buffer += chunk.toString();\n    this._processBuffer(callback);\n  }\n\n  _processBuffer(callback) {\n    if (this._buffer) {\n      this.push(this._buffer, 'utf8');\n      this._buffer = '';\n    }\n    callback(null);\n  }\n\n  _flushInput() {\n    // meant to be called from _flush()\n    if (this._stringDecoder) {\n      this._buffer += this._stringDecoder.end();\n    }\n  }\n\n  _flush(callback) {\n    this._flushInput();\n    this._processBuffer(callback);\n  }\n}\n\nmodule.exports = Utf8Stream;\n", "'use strict';\n\nconst Utf8Stream = require('./utils/Utf8Stream');\n\nconst patterns = {\n  value1: /^(?:[\\\"\\{\\[\\]\\-\\d]|true\\b|false\\b|null\\b|\\s{1,256})/,\n  string: /^(?:[^\\\"\\\\]{1,256}|\\\\[bfnrt\\\"\\\\\\/]|\\\\u[\\da-fA-F]{4}|\\\")/,\n  key1: /^(?:[\\\"\\}]|\\s{1,256})/,\n  colon: /^(?:\\:|\\s{1,256})/,\n  comma: /^(?:[\\,\\]\\}]|\\s{1,256})/,\n  ws: /^\\s{1,256}/,\n  numberStart: /^\\d/,\n  numberDigit: /^\\d{0,256}/,\n  numberFraction: /^[\\.eE]/,\n  numberExponent: /^[eE]/,\n  numberExpSign: /^[-+]/\n};\nconst MAX_PATTERN_SIZE = 16;\n\nlet noSticky = true;\ntry {\n  new RegExp('.', 'y');\n  noSticky = false;\n} catch (e) {\n  // suppress\n}\n\n!noSticky &&\n  Object.keys(patterns).forEach(key => {\n    let src = patterns[key].source.slice(1); // lop off ^\n    if (src.slice(0, 3) === '(?:' && src.slice(-1) === ')') {\n      src = src.slice(3, -1);\n    }\n    patterns[key] = new RegExp(src, 'y');\n  });\n\npatterns.numberFracStart = patterns.numberExpStart = patterns.numberStart;\npatterns.numberFracDigit = patterns.numberExpDigit = patterns.numberDigit;\n\nconst values = {true: true, false: false, null: null},\n  expected = {object: 'objectStop', array: 'arrayStop', '': 'done'};\n\n// long hexadecimal codes: \\uXXXX\nconst fromHex = s => String.fromCharCode(parseInt(s.slice(2), 16));\n\n// short codes: \\b \\f \\n \\r \\t \\\" \\\\ \\/\nconst codes = {b: '\\b', f: '\\f', n: '\\n', r: '\\r', t: '\\t', '\"': '\"', '\\\\': '\\\\', '/': '/'};\n\nclass Parser extends Utf8Stream {\n  static make(options) {\n    return new Parser(options);\n  }\n\n  constructor(options) {\n    super(Object.assign({}, options, {readableObjectMode: true}));\n\n    this._packKeys = this._packStrings = this._packNumbers = this._streamKeys = this._streamStrings = this._streamNumbers = true;\n    if (options) {\n      'packValues' in options && (this._packKeys = this._packStrings = this._packNumbers = options.packValues);\n      'packKeys' in options && (this._packKeys = options.packKeys);\n      'packStrings' in options && (this._packStrings = options.packStrings);\n      'packNumbers' in options && (this._packNumbers = options.packNumbers);\n      'streamValues' in options && (this._streamKeys = this._streamStrings = this._streamNumbers = options.streamValues);\n      'streamKeys' in options && (this._streamKeys = options.streamKeys);\n      'streamStrings' in options && (this._streamStrings = options.streamStrings);\n      'streamNumbers' in options && (this._streamNumbers = options.streamNumbers);\n      this._jsonStreaming = options.jsonStreaming;\n    }\n    !this._packKeys && (this._streamKeys = true);\n    !this._packStrings && (this._streamStrings = true);\n    !this._packNumbers && (this._streamNumbers = true);\n\n    this._done = false;\n    this._expect = this._jsonStreaming ? 'done' : 'value';\n    this._stack = [];\n    this._parent = '';\n    this._open_number = false;\n    this._accumulator = '';\n  }\n\n  _flush(callback) {\n    this._done = true;\n    super._flush(error => {\n      if (error) return callback(error);\n      if (this._open_number) {\n        if (this._streamNumbers) {\n          this.push({name: 'endNumber'});\n        }\n        this._open_number = false;\n        if (this._packNumbers) {\n          this.push({name: 'numberValue', value: this._accumulator});\n          this._accumulator = '';\n        }\n      }\n      callback(null);\n    });\n  }\n\n  _processBuffer(callback) {\n    let match,\n      value,\n      index = 0;\n    main: for (;;) {\n      switch (this._expect) {\n        case 'value1':\n        case 'value':\n          patterns.value1.lastIndex = index;\n          match = patterns.value1.exec(this._buffer);\n          if (!match) {\n            if (this._done || index + MAX_PATTERN_SIZE < this._buffer.length) {\n              if (index < this._buffer.length) return callback(new Error('Parser cannot parse input: expected a value'));\n              return callback(new Error('Parser has expected a value'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          switch (value) {\n            case '\"':\n              this._streamStrings && this.push({name: 'startString'});\n              this._expect = 'string';\n              break;\n            case '{':\n              this.push({name: 'startObject'});\n              this._stack.push(this._parent);\n              this._parent = 'object';\n              this._expect = 'key1';\n              break;\n            case '[':\n              this.push({name: 'startArray'});\n              this._stack.push(this._parent);\n              this._parent = 'array';\n              this._expect = 'value1';\n              break;\n            case ']':\n              if (this._expect !== 'value1') return callback(new Error(\"Parser cannot parse input: unexpected token ']'\"));\n              if (this._open_number) {\n                this._streamNumbers && this.push({name: 'endNumber'});\n                this._open_number = false;\n                if (this._packNumbers) {\n                  this.push({name: 'numberValue', value: this._accumulator});\n                  this._accumulator = '';\n                }\n              }\n              this.push({name: 'endArray'});\n              this._parent = this._stack.pop();\n              this._expect = expected[this._parent];\n              break;\n            case '-':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '-'});\n              }\n              this._packNumbers && (this._accumulator = '-');\n              this._expect = 'numberStart';\n              break;\n            case '0':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: '0'});\n              }\n              this._packNumbers && (this._accumulator = '0');\n              this._expect = 'numberFraction';\n              break;\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n              this._open_number = true;\n              if (this._streamNumbers) {\n                this.push({name: 'startNumber'});\n                this.push({name: 'numberChunk', value: value});\n              }\n              this._packNumbers && (this._accumulator = value);\n              this._expect = 'numberDigit';\n              break;\n            case 'true':\n            case 'false':\n            case 'null':\n              if (this._buffer.length - index === value.length && !this._done) break main; // wait for more input\n              this.push({name: value + 'Value', value: values[value]});\n              this._expect = expected[this._parent];\n              break;\n            // default: // ws\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'keyVal':\n        case 'string':\n          patterns.string.lastIndex = index;\n          match = patterns.string.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length && (this._done || this._buffer.length - index >= 6))\n              return callback(new Error('Parser cannot parse input: escaped characters'));\n            if (this._done) return callback(new Error('Parser has expected a string value'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            if (this._expect === 'keyVal') {\n              this._streamKeys && this.push({name: 'endKey'});\n              if (this._packKeys) {\n                this.push({name: 'keyValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = 'colon';\n            } else {\n              this._streamStrings && this.push({name: 'endString'});\n              if (this._packStrings) {\n                this.push({name: 'stringValue', value: this._accumulator});\n                this._accumulator = '';\n              }\n              this._expect = expected[this._parent];\n            }\n          } else if (value.length > 1 && value.charAt(0) === '\\\\') {\n            const t = value.length == 2 ? codes[value.charAt(1)] : fromHex(value);\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: t});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += t;\n            }\n          } else {\n            if (this._expect === 'keyVal' ? this._streamKeys : this._streamStrings) {\n              this.push({name: 'stringChunk', value: value});\n            }\n            if (this._expect === 'keyVal' ? this._packKeys : this._packStrings) {\n              this._accumulator += value;\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'key1':\n        case 'key':\n          patterns.key1.lastIndex = index;\n          match = patterns.key1.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an object key'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value === '\"') {\n            this._streamKeys && this.push({name: 'startKey'});\n            this._expect = 'keyVal';\n          } else if (value === '}') {\n            if (this._expect !== 'key1') return callback(new Error(\"Parser cannot parse input: unexpected token '}'\"));\n            this.push({name: 'endObject'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'colon':\n          patterns.colon.lastIndex = index;\n          match = patterns.colon.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ':'\"));\n            break main; // wait for more input\n          }\n          value = match[0];\n          value === ':' && (this._expect = 'value');\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'arrayStop':\n        case 'objectStop':\n          patterns.comma.lastIndex = index;\n          match = patterns.comma.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error(\"Parser cannot parse input: expected ','\"));\n            break main; // wait for more input\n          }\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          value = match[0];\n          if (value === ',') {\n            this._expect = this._expect === 'arrayStop' ? 'value' : 'key';\n          } else if (value === '}' || value === ']') {\n            if (value === '}' ? this._expect === 'arrayStop' : this._expect !== 'arrayStop') {\n              return callback(new Error(\"Parser cannot parse input: expected '\" + (this._expect === 'arrayStop' ? ']' : '}') + \"'\"));\n            }\n            this.push({name: value === '}' ? 'endObject' : 'endArray'});\n            this._parent = this._stack.pop();\n            this._expect = expected[this._parent];\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        // number chunks\n        case 'numberStart': // [0-9]\n          patterns.numberStart.lastIndex = index;\n          match = patterns.numberStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a starting digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '0' ? 'numberFraction' : 'numberDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberDigit': // [0-9]*\n          patterns.numberDigit.lastIndex = index;\n          match = patterns.numberDigit.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a digit'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberFraction';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberFraction': // [\\.eE]?\n          patterns.numberFraction.lastIndex = index;\n          match = patterns.numberFraction.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = value === '.' ? 'numberFracStart' : 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracStart': // [0-9]\n          patterns.numberFracStart.lastIndex = index;\n          match = patterns.numberFracStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected a fractional part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberFracDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberFracDigit': // [0-9]*\n          patterns.numberFracDigit.lastIndex = index;\n          match = patterns.numberFracDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExponent';\n              break;\n            }\n            if (this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'numberExponent': // [eE]?\n          patterns.numberExponent.lastIndex = index;\n          match = patterns.numberExponent.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            if (this._done) {\n              this._expect = 'done';\n              break;\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpSign';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpSign': // [-+]?\n          patterns.numberExpSign.lastIndex = index;\n          match = patterns.numberExpSign.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              this._expect = 'numberExpStart';\n              break;\n            }\n            if (this._done) return callback(new Error('Parser has expected an exponent value of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpStart';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpStart': // [0-9]\n          patterns.numberExpStart.lastIndex = index;\n          match = patterns.numberExpStart.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length || this._done) return callback(new Error('Parser cannot parse input: expected an exponent part of a number'));\n            break main; // wait for more input\n          }\n          value = match[0];\n          this._streamNumbers && this.push({name: 'numberChunk', value: value});\n          this._packNumbers && (this._accumulator += value);\n          this._expect = 'numberExpDigit';\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n        case 'numberExpDigit': // [0-9]*\n          patterns.numberExpDigit.lastIndex = index;\n          match = patterns.numberExpDigit.exec(this._buffer);\n          value = match[0];\n          if (value) {\n            this._streamNumbers && this.push({name: 'numberChunk', value: value});\n            this._packNumbers && (this._accumulator += value);\n            if (noSticky) {\n              this._buffer = this._buffer.slice(value.length);\n            } else {\n              index += value.length;\n            }\n          } else {\n            if (index < this._buffer.length || this._done) {\n              this._expect = expected[this._parent];\n              break;\n            }\n            break main; // wait for more input\n          }\n          break;\n        case 'done':\n          patterns.ws.lastIndex = index;\n          match = patterns.ws.exec(this._buffer);\n          if (!match) {\n            if (index < this._buffer.length) {\n              if (this._jsonStreaming) {\n                this._expect = 'value';\n                break;\n              }\n              return callback(new Error('Parser cannot parse input: unexpected characters'));\n            }\n            break main; // wait for more input\n          }\n          value = match[0];\n          if (this._open_number) {\n            this._streamNumbers && this.push({name: 'endNumber'});\n            this._open_number = false;\n            if (this._packNumbers) {\n              this.push({name: 'numberValue', value: this._accumulator});\n              this._accumulator = '';\n            }\n          }\n          if (noSticky) {\n            this._buffer = this._buffer.slice(value.length);\n          } else {\n            index += value.length;\n          }\n          break;\n      }\n    }\n    !noSticky && (this._buffer = this._buffer.slice(index));\n    callback(null);\n  }\n}\nParser.parser = Parser.make;\nParser.make.Constructor = Parser;\n\nmodule.exports = Parser;\n", "'use strict';\n\nconst Chain = require('stream-chain');\n\nconst Parser = require('../Parser');\n\nconst withParser = (fn, options) =>\n  new Chain([new Parser(options), fn(options)], Object.assign({}, options, {writableObjectMode: false, readableObjectMode: true}));\n\nmodule.exports = withParser;\n", "'use strict';\n\nconst StreamBase = require('./StreamBase');\nconst withParser = require('../utils/withParser');\n\nclass StreamArray extends StreamBase {\n  static make(options) {\n    return new StreamArray(options);\n  }\n\n  static withParser(options) {\n    return withParser(StreamArray.make, options);\n  }\n\n  constructor(options) {\n    super(options);\n    this._level = 1;\n    this._counter = 0;\n  }\n\n  _wait(chunk, _, callback) {\n    // first chunk should open an array\n    if (chunk.name !== 'startArray') {\n      return callback(new Error('Top-level object should be an array.'));\n    }\n    this._transform = this._filter;\n    return this._transform(chunk, _, callback);\n  }\n\n  _push(discard) {\n    if (this._assembler.current.length) {\n      if (discard) {\n        ++this._counter;\n        this._assembler.current.pop();\n      } else {\n        this.push({key: this._counter++, value: this._assembler.current.pop()});\n      }\n    }\n  }\n}\nStreamArray.streamArray = StreamArray.make;\nStreamArray.make.Constructor = StreamArray;\n\nmodule.exports = StreamArray;\n", "import {\n  Cache,\n  closeMainWindow,\n  environment,\n  getPreferenceValues,\n  LocalStorage,\n  showHUD,\n  Toast,\n  updateCommandMetadata,\n} from \"@raycast/api\";\nimport { BRIDGE_CONFIG_KEY } from \"./helpers/constants\";\nimport createHueClient from \"./lib/createHueClient\";\nimport { Light } from \"./lib/types\";\nimport HueClient from \"./lib/HueClient\";\n\nexport default async function ToggleAllLights() {\n  try {\n    const bridgeConfigString = await LocalStorage.getItem<string>(BRIDGE_CONFIG_KEY);\n    if (bridgeConfigString === undefined) throw Error(\"No Hue Bridge configured\");\n    const bridgeConfig = JSON.parse(bridgeConfigString);\n    const hueClient = await createHueClient(bridgeConfig);\n    const lights = await hueClient.getLights();\n    const onLights = lights.filter((light) => light.on.on);\n\n    if (environment.launchType === \"userInitiated\") {\n      await toggleLightsAndNotifyUser(lights, onLights, hueClient);\n    }\n\n    const updatedLights = await hueClient.getLights();\n    const updatedOnLights = updatedLights.filter((light) => light.on.on);\n    const groupedLights = await hueClient.getGroupedLights();\n    const zones = await hueClient.getZones();\n    const scenes = await hueClient.getScenes();\n\n    const cache = new Cache();\n    if (lights.length > 0) {\n      cache.set(\"lights\", JSON.stringify(updatedLights));\n    }\n    if (groupedLights.length > 0) {\n      cache.set(\"groupedLights\", JSON.stringify(groupedLights));\n    }\n    if (zones.length > 0) {\n      cache.set(\"zones\", JSON.stringify(zones));\n    }\n    if (scenes.length > 0) {\n      cache.set(\"scenes\", JSON.stringify(scenes));\n    }\n\n    // Update command metadata\n    if (updatedOnLights.length === 0) {\n      updateCommandMetadata({ subtitle: \"All lights are off\" }).then();\n    } else if (updatedOnLights.length === lights.length) {\n      updateCommandMetadata({ subtitle: \"All lights are on\" }).then();\n    } else {\n      updateCommandMetadata({ subtitle: `${updatedOnLights.length} of ${lights.length} lights are on` }).then();\n    }\n  } catch (error) {\n    if (environment.launchType !== \"userInitiated\" || !(error instanceof Error)) {\n      throw error;\n    }\n\n    console.error(error.message);\n    showHUD(error.message).then();\n  } finally {\n    if (environment.launchType === \"userInitiated\") {\n      await closeMainWindow();\n    }\n  }\n}\n\nasync function toggleLightsAndNotifyUser(lights: Light[], onLights: Light[], hueClient: HueClient): Promise<void> {\n  const { toggleAllLights } = getPreferenceValues<Preferences>();\n  const toast = new Toast({\n    style: Toast.Style.Animated,\n    title: \"\",\n    message: \"Please wait\u2026\",\n  });\n\n  const toggleOn = onLights.length === 0 || (toggleAllLights === \"on\" && lights.length !== onLights.length);\n  let toastTitle: string;\n  let successMessage: string;\n  let failureMessage: string;\n\n  if (toggleOn) {\n    toastTitle = \"Turning on all lights\u2026\";\n    successMessage = `Turned on all ${lights.length} lights.`;\n    failureMessage = `failed turning on ${lights.length} lights.`;\n  } else {\n    toastTitle = \"Turning off all lights\u2026\";\n    successMessage = `Turned off all ${onLights.length} lights that were on.`;\n    failureMessage = `failed turning off ${onLights.length} lights that were on.`;\n  }\n\n  toast.title = toastTitle;\n  toast.show().then();\n\n  const settledPromises = await Promise.allSettled(\n    lights\n      .filter((light) => {\n        return toggleOn ? !onLights.includes(light) : onLights.includes(light);\n      })\n      .map((light) => {\n        return hueClient.updateLight(light, { on: { on: toggleOn } });\n      }),\n  );\n\n  const lightsTurnedOn = settledPromises.filter((p) => p.status === \"fulfilled\").length;\n  const lightsFailed = settledPromises.filter((p) => p.status === \"rejected\").length;\n\n  if (lightsFailed === 0) {\n    showHUD(successMessage).then();\n  } else {\n    showHUD(`Turned on ${lightsTurnedOn} lights, ${failureMessage}`).then();\n  }\n}\n", "import { CssColor } from \"../lib/types\";\n\nexport const APP_NAME = \"raycast_hue_extension\";\nexport const BRIDGE_CONFIG_KEY = \"bridgeCredentials\";\n\nexport const BRIGHTNESSES = [100, 90, 80, 70, 60, 50, 40, 30, 20, 10, 1];\nexport const BRIGHTNESS_MIN = BRIGHTNESSES[BRIGHTNESSES.length - 1];\nexport const BRIGHTNESS_MAX = BRIGHTNESSES[0];\nexport const MIRED_MIN = 153;\nexport const MIRED_MAX = 500;\nexport const MIRED_STEP = (500.0 - 153.0) / 10.0;\nexport const MIRED_DEFAULT = 357;\nexport const DEFAULT_TRANSITION_TIME_MS = 400;\nexport const COLORS: CssColor[] = [\n  { name: \"Alice Blue\", value: \"#f0f8ff\" },\n  { name: \"Antique White\", value: \"#faebd7\" },\n  { name: \"Aqua\", value: \"#00ffff\" },\n  { name: \"Aqua Marine\", value: \"#7fffd4\" },\n  { name: \"Azure\", value: \"#f0ffff\" },\n  { name: \"Beige\", value: \"#f5f5dc\" },\n  { name: \"Bisque\", value: \"#ffe4c4\" },\n  { name: \"Blanched Almond\", value: \"#ffebcd\" },\n  { name: \"Blue\", value: \"#0000ff\" },\n  { name: \"Blue Violet\", value: \"#8a2be2\" },\n  { name: \"Brown\", value: \"#a52a2a\" },\n  { name: \"Burlywood\", value: \"#deb887\" },\n  { name: \"Cadet Blue\", value: \"#5f9ea0\" },\n  { name: \"Chartreuse\", value: \"#7fff00\" },\n  { name: \"Chocolate\", value: \"#d2691e\" },\n  { name: \"Coral\", value: \"#ff7f50\" },\n  { name: \"Cornflower Blue\", value: \"#6495ed\" },\n  { name: \"Cornsilk\", value: \"#fff8dc\" },\n  { name: \"Crimson\", value: \"#dc143c\" },\n  { name: \"Cyan\", value: \"#00ffff\" },\n  { name: \"Dark Blue\", value: \"#00008b\" },\n  { name: \"Dark Cyan\", value: \"#008b8b\" },\n  { name: \"Dark Goldenrod\", value: \"#b8860b\" },\n  { name: \"Dark Green\", value: \"#006400\" },\n  { name: \"Dark Khaki\", value: \"#bdb76b\" },\n  { name: \"Dark Magenta\", value: \"#8b008b\" },\n  { name: \"Dark Olive Green\", value: \"#556b2f\" },\n  { name: \"Dark Orange\", value: \"#ff8c00\" },\n  { name: \"Dark Orchid\", value: \"#9932cc\" },\n  { name: \"Dark Red\", value: \"#8b0000\" },\n  { name: \"Dark Salmon\", value: \"#e9967a\" },\n  { name: \"Dark Sea Green\", value: \"#8fbc8f\" },\n  { name: \"Dark Slate Blue\", value: \"#483d8b\" },\n  { name: \"Dark Turquoise\", value: \"#00ced1\" },\n  { name: \"Dark Violet\", value: \"#9400d3\" },\n  { name: \"Deep Pink\", value: \"#ff1493\" },\n  { name: \"Deep Sky Blue\", value: \"#00bfff\" },\n  { name: \"Dodger Blue\", value: \"#1e90ff\" },\n  { name: \"Fire Brick\", value: \"#b22222\" },\n  { name: \"Floral White\", value: \"#fffaf0\" },\n  { name: \"Forest Green\", value: \"#228b22\" },\n  { name: \"Fuchsia\", value: \"#ff00ff\" },\n  { name: \"Gainsboro\", value: \"#dcdcdc\" },\n  { name: \"Ghost White\", value: \"#f8f8ff\" },\n  { name: \"Goldenrod\", value: \"#daa520\" },\n  { name: \"Gold\", value: \"#ffd700\" },\n  { name: \"Green\", value: \"#008000\" },\n  { name: \"Green Yellow\", value: \"#adff2f\" },\n  { name: \"Honey Dew\", value: \"#f0fff0\" },\n  { name: \"Hot Pink\", value: \"#ff69b4\" },\n  { name: \"Indian Red\", value: \"#cd5c5c\" },\n  { name: \"Indigo\", value: \"#4b0082\" },\n  { name: \"Ivory\", value: \"#fffff0\" },\n  { name: \"Khaki\", value: \"#f0e68c\" },\n  { name: \"Lavender Blush\", value: \"#fff0f5\" },\n  { name: \"Lavender\", value: \"#e6e6fa\" },\n  { name: \"Lawn Green\", value: \"#7cfc00\" },\n  { name: \"Lemon Chiffon\", value: \"#fffacd\" },\n  { name: \"Light Blue\", value: \"#add8e6\" },\n  { name: \"Light Coral\", value: \"#f08080\" },\n  { name: \"Light Cyan\", value: \"#e0ffff\" },\n  { name: \"Light Goldenrod Yellow\", value: \"#fafad2\" },\n  { name: \"Light Green\", value: \"#90ee90\" },\n  { name: \"Light Pink\", value: \"#ffb6c1\" },\n  { name: \"Light Salmon\", value: \"#ffa07a\" },\n  { name: \"Light Sea Green\", value: \"#20b2aa\" },\n  { name: \"Light Sky Blue\", value: \"#87cefa\" },\n  { name: \"Light Steel Blue\", value: \"#b0c4de\" },\n  { name: \"Light Yellow\", value: \"#ffffe0\" },\n  { name: \"Lime\", value: \"#00ff00\" },\n  { name: \"Lime Green\", value: \"#32cd32\" },\n  { name: \"Linen\", value: \"#faf0e6\" },\n  { name: \"Magenta\", value: \"#ff00ff\" },\n  { name: \"Maroon\", value: \"#800000\" },\n  { name: \"Medium Aqua Marine\", value: \"#66cdaa\" },\n  { name: \"Medium Blue\", value: \"#0000cd\" },\n  { name: \"Medium Orchid\", value: \"#ba55d3\" },\n  { name: \"Medium Purple\", value: \"#9370db\" },\n  { name: \"Medium Sea Green\", value: \"#3cb371\" },\n  { name: \"Medium Slate Blue\", value: \"#7b68ee\" },\n  { name: \"Medium Spring Green\", value: \"#00fa9a\" },\n  { name: \"Medium Turquoise\", value: \"#48d1cc\" },\n  { name: \"Medium Violet Red\", value: \"#c71585\" },\n  { name: \"Midnight Blue\", value: \"#191970\" },\n  { name: \"Mint Cream\", value: \"#f5fffa\" },\n  { name: \"Misty Rose\", value: \"#ffe4e1\" },\n  { name: \"Moccasin\", value: \"#ffe4b5\" },\n  { name: \"Navajo White\", value: \"#ffdead\" },\n  { name: \"Navy\", value: \"#000080\" },\n  { name: \"Oldlace\", value: \"#fdf5e6\" },\n  { name: \"Olive\", value: \"#808000\" },\n  { name: \"Olive Drab\", value: \"#6b8e23\" },\n  { name: \"Orange\", value: \"#ffa500\" },\n  { name: \"Orange Red\", value: \"#ff4500\" },\n  { name: \"Orchid\", value: \"#da70d6\" },\n  { name: \"Pale Goldenrod\", value: \"#eee8aa\" },\n  { name: \"Pale Green\", value: \"#98fb98\" },\n  { name: \"Pale Turquoise\", value: \"#afeeee\" },\n  { name: \"Pale Violet Red\", value: \"#db7093\" },\n  { name: \"Papaya Whip\", value: \"#ffefd5\" },\n  { name: \"Peach Puff\", value: \"#ffdab9\" },\n  { name: \"Peru\", value: \"#cd853f\" },\n  { name: \"Pink\", value: \"#ffc0cb\" },\n  { name: \"Plum\", value: \"#dda0dd\" },\n  { name: \"Powder Blue\", value: \"#b0e0e6\" },\n  { name: \"Purple\", value: \"#800080\" },\n  { name: \"Rebecca Purple\", value: \"#663399\" },\n  { name: \"Red\", value: \"#ff0000\" },\n  { name: \"Rosy Brown\", value: \"#bc8f8f\" },\n  { name: \"Royal Blue\", value: \"#4169e1\" },\n  { name: \"Saddle Brown\", value: \"#8b4513\" },\n  { name: \"Salmon\", value: \"#fa8072\" },\n  { name: \"Sandy Brown\", value: \"#f4a460\" },\n  { name: \"Sea Green\", value: \"#2e8b57\" },\n  { name: \"Sea Shell\", value: \"#fff5ee\" },\n  { name: \"Sienna\", value: \"#a0522d\" },\n  { name: \"Silver\", value: \"#c0c0c0\" },\n  { name: \"Sky Blue\", value: \"#87ceeb\" },\n  { name: \"Slate Blue\", value: \"#6a5acd\" },\n  { name: \"Snow\", value: \"#fffafa\" },\n  { name: \"Spring Green\", value: \"#00ff7f\" },\n  { name: \"Steel Glue\", value: \"#4682b4\" },\n  { name: \"Tan\", value: \"#d2b48c\" },\n  { name: \"Teal\", value: \"#008080\" },\n  { name: \"Thistle\", value: \"#d8bfd8\" },\n  { name: \"Tomato\", value: \"#ff6347\" },\n  { name: \"Turquoise\", value: \"#40e0d0\" },\n  { name: \"Violet\", value: \"#ee82ee\" },\n  { name: \"Wheat\", value: \"#f5deb3\" },\n  { name: \"White\", value: \"#ffffff\" },\n  { name: \"White Smoke\", value: \"#f5f5f5\" },\n  { name: \"Yellow\", value: \"#ffff00\" },\n  { name: \"Yellow Green\", value: \"#9acd32\" },\n];\n", "import { ClientHttp2Session, connect, sensitiveHeaders } from \"http2\";\nimport React from \"react\";\nimport { BridgeConfig, GroupedLight, Light, Room, Scene, Zone } from \"./types\";\nimport fs from \"fs\";\nimport { environment } from \"@raycast/api\";\nimport dns from \"dns\";\nimport HueClient from \"./HueClient\";\nimport * as path from \"path\";\n\nconst CONNECTION_TIMEOUT_MS = 5000;\n\nexport default async function createHueClient(\n  bridgeConfig: BridgeConfig,\n  setLights?: React.Dispatch<React.SetStateAction<Light[]>>,\n  setGroupedLights?: React.Dispatch<React.SetStateAction<GroupedLight[]>>,\n  setRooms?: React.Dispatch<React.SetStateAction<Room[]>>,\n  setZones?: React.Dispatch<React.SetStateAction<Zone[]>>,\n  setScenes?: React.Dispatch<React.SetStateAction<Scene[]>>,\n) {\n  const http2Session = await new Promise<ClientHttp2Session>((resolve, reject) => {\n    let certificate: Buffer | undefined;\n\n    if (bridgeConfig.certificateType === \"self-signed\" && bridgeConfig.certificate) {\n      certificate = Buffer.from(bridgeConfig.certificate, \"utf-8\");\n      console.log(\"Connecting to the Hue Bridge using it\u2019s self-signed certificate\u2026\");\n    } else {\n      certificate = fs.readFileSync(path.join(environment.assetsPath, \"huebridge_cacert.pem\"));\n      console.log(\"Connecting to the Hue Bridge, checking it\u2019s certificate against the Hue Bridge root CA\u2026\");\n    }\n\n    /*\n     * Connect to the Hue Bridge using the Bridge ID as the hostname instead of the IP address, which is then resolved\n     * using the function provided to the `lookup` option. This is necessary because connecting to IP addresses using\n     * TLS is not permitted by RFC 6066.\n     */\n    const session = connect(`https://${bridgeConfig.id}`, {\n      ca: certificate, // Either the bridge\u2019s self-signed certificate or the Hue Bridge Root CA\n      checkServerIdentity: (hostname, cert) => {\n        if (cert.subject.CN !== bridgeConfig.id) {\n          throw new Error(\n            \"Server identity check failed. Certificate subject\u2019s Common Name does not match the Bridge ID.\",\n          );\n        }\n        if (bridgeConfig.certificateType === \"signed-by-hue-bridge-root-ca\" && cert.issuer.CN !== \"root-bridge\") {\n          throw new Error(\n            \"Server identity check failed. Certificate issuer\u2019s Common Name does not match the expected value.\",\n          );\n        }\n        if (bridgeConfig.certificateType === \"self-signed\" && cert.issuer.CN !== bridgeConfig.id) {\n          throw new Error(\n            \"Server identity check failed. Certificate issuer\u2019s Common Name does not match the Bridge ID.\",\n          );\n        }\n\n        // The certificate is valid. Undefined is returned to indicate that the server identity check succeeded.\n        return undefined;\n      },\n      lookup: (hostname, options, callback) => {\n        if (bridgeConfig.ipAddress !== undefined && hostname.toLowerCase() === bridgeConfig.id) {\n          // Resolve the hostname (which is the Bridge ID) to the IP address of the Hue Bridge\n          callback(null, [{ address: bridgeConfig.ipAddress, family: 4 }]);\n        } else {\n          // Fallback to the default DNS lookup\n          dns.lookup(hostname, options, callback);\n        }\n      },\n    });\n\n    session.setTimeout(CONNECTION_TIMEOUT_MS, () => {\n      return reject(\"Connection timed out.\");\n    });\n\n    session.once(\"connect\", () => {\n      // Make a request to the Hue Bridge to check if the username is valid\n      const stream = session.request({\n        \":method\": \"GET\",\n        \":path\": \"/clip/v2/resource/bridge\",\n        \"hue-application-key\": bridgeConfig.username,\n        [sensitiveHeaders]: [\"hue-application-key\"],\n      });\n\n      stream.on(\"response\", (response) => {\n        if (response[\":status\"] === 403) {\n          return reject(\"Please check your username.\");\n        } else if (response[\":status\"] !== 200) {\n          return reject(\"Status code: \" + response[\":status\"]);\n        }\n        return resolve(session);\n      });\n    });\n\n    session.once(\"error\", (error) => {\n      return reject(error);\n    });\n  });\n\n  return new HueClient(bridgeConfig, http2Session, setLights, setGroupedLights, setRooms, setZones, setScenes);\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport {\n  BridgeConfig,\n  GroupedLight,\n  HasId,\n  Light,\n  LightRequest,\n  Method,\n  ParsedUpdateEvent,\n  Room,\n  Scene,\n  SceneRequest,\n  Zone,\n} from \"./types\";\nimport { ClientHttp2Session, constants, IncomingHttpHeaders, IncomingHttpStatusHeader, sensitiveHeaders } from \"http2\";\nimport React from \"react\";\nimport RateLimitedQueue from \"./RateLimitedQueue\";\nimport StreamArray from \"stream-json/streamers/StreamArray\";\nimport Chain from \"stream-chain\";\nimport \"../helpers/arrayExtensions\";\n\nconst DATA_PREFIX = \"data: \";\nconst { HTTP2_HEADER_METHOD, HTTP2_HEADER_PATH, HTTP2_HEADER_ACCEPT } = constants;\n\ntype Response = {\n  headers: IncomingHttpHeaders & IncomingHttpStatusHeader;\n  data: {\n    errors: { description: string }[];\n    data: any[];\n  };\n};\n\nexport default class HueClient {\n  public bridgeConfig: BridgeConfig;\n  private readonly http2Session: ClientHttp2Session;\n  private readonly setLights?: React.Dispatch<React.SetStateAction<Light[]>>;\n  private readonly setGroupedLights?: React.Dispatch<React.SetStateAction<GroupedLight[]>>;\n  private readonly setRooms?: React.Dispatch<React.SetStateAction<Room[]>>;\n  private readonly setZones?: React.Dispatch<React.SetStateAction<Zone[]>>;\n  private readonly setScenes?: React.Dispatch<React.SetStateAction<Scene[]>>;\n  private readonly lightsQueue = new RateLimitedQueue(10);\n  private readonly groupedLightsQueue = new RateLimitedQueue(1, 1);\n\n  constructor(\n    bridgeConfig: BridgeConfig,\n    http2Session: ClientHttp2Session,\n    setLights?: React.Dispatch<React.SetStateAction<Light[]>>,\n    setGroupedLights?: React.Dispatch<React.SetStateAction<GroupedLight[]>>,\n    setRooms?: React.Dispatch<React.SetStateAction<Room[]>>,\n    setZones?: React.Dispatch<React.SetStateAction<Zone[]>>,\n    setScenes?: React.Dispatch<React.SetStateAction<Scene[]>>,\n  ) {\n    this.http2Session = http2Session;\n    this.bridgeConfig = bridgeConfig;\n    this.setLights = setLights;\n    this.setGroupedLights = setGroupedLights;\n    this.setRooms = setRooms;\n    this.setZones = setZones;\n    this.setScenes = setScenes;\n    this.listenToEventSource();\n  }\n\n  public async getLights(): Promise<Light[]> {\n    const response = await this.makeRequest(\"GET\", \"/clip/v2/resource/light\");\n    return response.data.data;\n  }\n\n  public async getGroupedLights(): Promise<GroupedLight[]> {\n    const response = await this.makeRequest(\"GET\", \"/clip/v2/resource/grouped_light\");\n    return response.data.data;\n  }\n\n  public async getScenes(): Promise<Scene[]> {\n    const response = await this.makeRequest(\"GET\", \"/clip/v2/resource/scene\");\n    return response.data.data;\n  }\n\n  public async getRooms(): Promise<Room[]> {\n    const response = await this.makeRequest(\"GET\", \"/clip/v2/resource/room\");\n    return response.data.data;\n  }\n\n  public async getZones(): Promise<Zone[]> {\n    const response = await this.makeRequest(\"GET\", \"/clip/v2/resource/zone\");\n    return response.data.data;\n  }\n\n  public async updateLight(light: Light, properties: LightRequest): Promise<Partial<Light>[]> {\n    const response = await this.lightsQueue.enqueueRequest(() =>\n      this.makeRequest(\"PUT\", `/clip/v2/resource/light/${light.id}`, properties),\n    );\n\n    return response.data.data;\n  }\n\n  public async updateGroupedLight(groupedLight: GroupedLight, properties: Partial<GroupedLight>): Promise<any> {\n    const response = await this.groupedLightsQueue.enqueueRequest(() =>\n      this.makeRequest(\"PUT\", `/clip/v2/resource/grouped_light/${groupedLight.id}`, properties),\n    );\n\n    return response.data.data;\n  }\n\n  public async updateScene(scene: Scene, properties: SceneRequest): Promise<any> {\n    const response = await this.makeRequest(\"PUT\", `/clip/v2/resource/scene/${scene.id}`, properties);\n\n    return response.data.data;\n  }\n\n  private makeRequest(method: Method, path: string, body?: any): Promise<Response> {\n    return new Promise((resolve, reject) => {\n      const stream = this.http2Session.request({\n        [HTTP2_HEADER_METHOD]: method,\n        [HTTP2_HEADER_PATH]: path,\n        \"hue-application-key\": this.bridgeConfig.username,\n        [sensitiveHeaders]: [\"hue-application-key\"],\n      });\n\n      let data = \"\";\n\n      if (body !== undefined) {\n        stream.write(JSON.stringify(body), \"utf8\");\n      }\n\n      stream.setEncoding(\"utf8\");\n\n      const response: Response = {\n        headers: {},\n        data: {\n          errors: [],\n          data: [],\n        },\n      };\n\n      stream.on(\"response\", (responseHeaders: IncomingHttpHeaders & IncomingHttpStatusHeader) => {\n        response.headers = responseHeaders;\n      });\n\n      stream.on(\"data\", (chunk) => {\n        data += chunk;\n      });\n\n      stream.on(\"end\", () => {\n        stream.close();\n\n        try {\n          if (response.headers[\":status\"] !== 200 && response.headers[\"content-type\"] === \"text/html\") {\n            // On non-200 responses, the body is an HTML page with an error message\n            const errorMatch = data.match(/(?<=<div class=\"error\">)(.*?)(?=<\\/div>)/);\n            if (errorMatch && errorMatch[0]) {\n              console.error({ headers: response.headers, message: errorMatch[0] });\n              return reject(`Status ${response.headers[\":status\"]}: ${errorMatch[0]}`);\n            }\n          }\n\n          response.data = JSON.parse(data);\n\n          if (response.data.errors != null && response.data.errors.length > 0) {\n            const errorMessage = response.data.errors.map((error) => error.description).join(\", \");\n            console.error({ headers: response.headers, message: errorMessage });\n            return reject(errorMessage);\n          }\n\n          return resolve(response);\n        } catch (error) {\n          return reject(error);\n        }\n      });\n\n      stream.on(\"error\", (error) => {\n        return reject(error);\n      });\n\n      stream.end();\n    });\n  }\n\n  private listenToEventSource(): void {\n    const stream = this.http2Session.request({\n      [HTTP2_HEADER_METHOD]: \"GET\",\n      [HTTP2_HEADER_PATH]: \"/eventstream/clip/v2\",\n      [HTTP2_HEADER_ACCEPT]: \"text/event-stream\",\n      \"hue-application-key\": this.bridgeConfig.username,\n      [sensitiveHeaders]: [\"hue-application-key\"],\n    });\n\n    let parser: Chain | null = null;\n\n    const onParsedUpdateEvent = ({ value: updateEvent }: ParsedUpdateEvent) => {\n      this.setLights?.((lights) => {\n        const lightUpdates = updateEvent.data.filter((resource) => {\n          return resource.type === \"light\";\n        }) as (Partial<Light> & HasId)[];\n\n        return lights.replaceItems(lightUpdates.mergeObjectsById());\n      });\n\n      this.setGroupedLights?.((groupedLights) => {\n        const updatedGroupedLights = updateEvent.data.filter((resource) => {\n          return resource.type === \"grouped_light\";\n        }) as (Partial<GroupedLight> & HasId)[];\n        return groupedLights.replaceItems(updatedGroupedLights);\n      });\n\n      this.setRooms?.((rooms) => {\n        const updatedRooms = updateEvent.data.filter((resource) => {\n          return resource.type === \"room\";\n        }) as (Partial<Room> & HasId)[];\n        return rooms.replaceItems(updatedRooms);\n      });\n\n      this.setZones?.((zones) => {\n        const updatedZones = updateEvent.data.filter((resource) => {\n          return resource.type === \"zone\";\n        }) as (Partial<Zone> & HasId)[];\n        return zones.replaceItems(updatedZones);\n      });\n\n      this.setScenes?.((scenes) => {\n        const updatedScenes = updateEvent.data.filter((resource) => {\n          return resource.type === \"scene\";\n        }) as (Partial<Scene> & HasId)[];\n        return scenes.replaceItems(updatedScenes);\n      });\n\n      // If the parser encounters a new JSON array, it will throw an error\n      // because two successive arrays is not valid JSON.\n      // To prevent this, a new parser is created for each new array.\n      parser = null;\n    };\n\n    stream.setEncoding(\"utf8\");\n\n    stream.on(\"data\", (chunk) => {\n      parser ??= createParser(parser, onParsedUpdateEvent);\n\n      const lines = chunk.split(\"\\n\");\n\n      for (const line of lines) {\n        const dataPrefixIndex = line.indexOf(DATA_PREFIX);\n        if (dataPrefixIndex === -1) continue;\n        const dataString: string = line.substring(dataPrefixIndex + DATA_PREFIX.length);\n        parser.write(dataString);\n      }\n    });\n\n    stream.on(\"end\", () => {\n      parser?.end();\n      stream.close();\n    });\n\n    stream.on(\"error\", (error) => {\n      parser?.end();\n      stream.close();\n      console.error(error, [parser?.input]);\n    });\n  }\n}\n\nfunction createParser(parser: Chain | null, callback: (data: ParsedUpdateEvent) => void): Chain {\n  parser = StreamArray.withParser();\n\n  parser.on(\"data\", (data) => {\n    callback(data);\n    parser = null;\n  });\n\n  parser.on(\"error\", (error) => {\n    console.error(error);\n  });\n\n  return parser;\n}\n", "export default class RateLimitedQueue {\n  private queue: (() => Promise<void>)[] = [];\n  private isProcessing = false;\n  private readonly requestsPerSecond;\n  private readonly maxQueueLength;\n  private lastRequestTimestamp = 0;\n\n  constructor(requestsPerSecond: number, maxQueueLength?: number | undefined) {\n    this.requestsPerSecond = requestsPerSecond;\n    this.maxQueueLength = maxQueueLength;\n  }\n\n  async enqueueRequest<T>(request: () => Promise<T>): Promise<T> {\n    return new Promise((resolve, reject) => {\n      if (this.maxQueueLength && this.queue.length > this.maxQueueLength) {\n        // Silently drop request\n        return;\n      }\n\n      this.queue.push(async () => {\n        try {\n          const result = await request();\n          return resolve(result);\n        } catch (error) {\n          return reject(error);\n        } finally {\n          this.processNext();\n        }\n      });\n\n      if (!this.isProcessing) {\n        this.processNext();\n      }\n    });\n  }\n\n  private processNext(): void {\n    if (this.queue.length === 0) {\n      this.isProcessing = false;\n      return;\n    }\n\n    this.isProcessing = true;\n    const currentTime = Date.now();\n    const timeSinceLastRequest = currentTime - this.lastRequestTimestamp;\n    const delay = Math.max(0, 1000 / this.requestsPerSecond - timeSinceLastRequest);\n\n    setTimeout(() => {\n      const request = this.queue.shift();\n      if (request) {\n        this.lastRequestTimestamp = Date.now();\n        request().then();\n      }\n    }, delay);\n  }\n}\n", "import { HasId, Id } from \"../lib/types\";\n\nexport {};\n\ndeclare global {\n  interface Array<T extends HasId> {\n    /**\n     * The <code>updateItem</code> method <strong>creates a new array</strong> with the <code>changes</code> applied to\n     * the array element that matches the <code>id</code> of the given <code>item</code>.\n     */\n    updateItem(item: Id, changes: Partial<T>): T[];\n\n    /**\n     * The <code>replaceItems</code> method <strong>creates a new array</strong> where array elements are replaced with\n     * the <code>newItems</code> if the <code>id</code> matches.\n     */\n    replaceItems(items: Partial<T>[]): T[];\n\n    /**\n     * The <code>replaceItems</code> method <strong>creates a new array</strong> where array elements are updated with\n     * the <code>changes</code> if the <code>id</code> matches.\n     */\n    updateItems(itemChanges: Map<Id, Partial<T>>): T[];\n\n    /**\n     * The <code>mergeObjectsById</code> method <strong>creates a new array</strong> where all objects with the same\n     * <code>id</code> are merged.\n     */\n    mergeObjectsById(): T[];\n  }\n}\n\nif (!Array.prototype.updateItem) {\n  Array.prototype.updateItem = function (id, changes) {\n    return this.map((it) => (it.id !== id ? it : { ...it, ...changes }));\n  };\n}\n\nif (!Array.prototype.updateItems) {\n  Array.prototype.updateItems = function <T extends HasId>(changes: Map<Id, Partial<T>>): T[] {\n    return this.map((it) => {\n      const change = changes.get(it.id);\n      return !change ? it : { ...it, ...change };\n    });\n  };\n}\n\nif (!Array.prototype.replaceItems) {\n  Array.prototype.replaceItems = function (items) {\n    return this.map((it) => {\n      const item = items.find((item) => item.id === it.id);\n      return !item ? it : { ...it, ...item };\n    });\n  };\n}\n\nif (!Array.prototype.mergeObjectsById) {\n  Array.prototype.mergeObjectsById = function () {\n    return Object.values(\n      this.reduce((acc, obj) => {\n        acc[obj.id] = !acc[obj.id] ? obj : { ...acc[obj.id], ...obj };\n        return acc;\n      }, {}),\n    );\n  };\n}\n"],
  "mappings": "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",
  "names": ["require_Assembler", "__commonJSMin", "exports", "module", "EventEmitter", "startObject", "Ctr", "Assembler", "stream", "options", "chunk", "path", "i", "key", "level", "index", "value", "require_StreamBase", "__commonJSMin", "exports", "module", "Transform", "Assembler", "Counter", "initialDepth", "StreamBase", "options", "chunk", "encoding", "callback", "result", "require_stream_chain", "__commonJSMin", "exports", "module", "Readable", "Writable", "Duplex", "Transform", "none", "finalSymbol", "manySymbol", "final", "value", "many", "values", "isFinal", "o", "isMany", "getFinalValue", "getManyValues", "runAsyncGenerator", "gen", "stream", "data", "Chain", "wrapFunction", "fn", "chunk", "encoding", "callback", "result", "error", "wrapArray", "fns", "isReadableNodeStream", "obj", "isWritableNodeStream", "isDuplexNodeStream", "options", "index", "s", "output", "_1", "_2", "e", "require_Utf8Stream", "__commonJSMin", "exports", "module", "Transform", "StringDecoder", "Utf8Stream", "options", "chunk", "encoding", "callback", "_", "require_Parser", "__commonJSMin", "exports", "module", "Utf8Stream", "patterns", "MAX_PATTERN_SIZE", "noSticky", "key", "src", "values", "expected", "fromHex", "s", "codes", "Parser", "options", "callback", "error", "match", "value", "index", "main", "t", "require_withParser", "__commonJSMin", "exports", "module", "Chain", "Parser", "withParser", "fn", "options", "require_StreamArray", "__commonJSMin", "exports", "module", "StreamBase", "withParser", "StreamArray", "options", "chunk", "_", "callback", "discard", "toggleAllLights_exports", "__export", "ToggleAllLights", "__toCommonJS", "import_api", "BRIDGE_CONFIG_KEY", "BRIGHTNESSES", "BRIGHTNESS_MIN", "BRIGHTNESS_MAX", "MIRED_STEP", "import_http2", "import_fs", "import_api", "import_dns", "import_http2", "RateLimitedQueue", "requestsPerSecond", "maxQueueLength", "request", "resolve", "reject", "result", "error", "timeSinceLastRequest", "delay", "import_StreamArray", "id", "changes", "it", "change", "items", "item", "acc", "obj", "DATA_PREFIX", "HTTP2_HEADER_METHOD", "HTTP2_HEADER_PATH", "HTTP2_HEADER_ACCEPT", "HueClient", "bridgeConfig", "http2Session", "setLights", "setGroupedLights", "setRooms", "setZones", "setScenes", "RateLimitedQueue", "light", "properties", "groupedLight", "scene", "method", "path", "body", "resolve", "reject", "stream", "data", "response", "responseHeaders", "chunk", "errorMatch", "errorMessage", "error", "parser", "onParsedUpdateEvent", "updateEvent", "lights", "lightUpdates", "resource", "groupedLights", "updatedGroupedLights", "rooms", "updatedRooms", "zones", "updatedZones", "scenes", "updatedScenes", "createParser", "lines", "line", "dataPrefixIndex", "dataString", "callback", "StreamArray", "path", "CONNECTION_TIMEOUT_MS", "createHueClient", "bridgeConfig", "setLights", "setGroupedLights", "setRooms", "setZones", "setScenes", "http2Session", "resolve", "reject", "certificate", "fs", "session", "hostname", "cert", "options", "callback", "dns", "response", "error", "HueClient", "ToggleAllLights", "bridgeConfigString", "BRIDGE_CONFIG_KEY", "bridgeConfig", "hueClient", "createHueClient", "lights", "onLights", "light", "toggleLightsAndNotifyUser", "updatedLights", "updatedOnLights", "groupedLights", "zones", "scenes", "cache", "error", "toggleAllLights", "toast", "toggleOn", "toastTitle", "successMessage", "failureMessage", "settledPromises", "lightsTurnedOn", "p"]
}
